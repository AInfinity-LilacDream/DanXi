name: CI-iOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_upload:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Select Latest Xcode
        uses: devbotsxyz/xcode-select@v1.1.0
        with:
          version: latest
          beta: false
      
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.1'
          channel: 'stable'
          
      - name: Prepare Flutter Dependencies
        run: flutter pub get
      - name: Prepare Flutter I18n
        run: flutter pub global activate intl_utils
      - name: Generate Flutter I18n
        run: flutter pub global run intl_utils:generate
          
      - name: Bump Build Number - Step 1
        run: flutter pub global activate cider
      - name: Bump Build Number - Step 2
        run: flutter pub global run cider bump build
      
      - name: Get Flutter Version
        id: get_flutter_version
        uses: its404/get-flutter-version@v1.0.0
      
      - name: Update Xcode Build Number
        uses: yanamura/ios-bump-version@v1
        with:
          version: ${{ steps.get_flutter_version.outputs.version_number }}
          build-number: ${{ steps.get_flutter_version.outputs.build_number }}
          project-path: ios
      
      - name: Commit Build Number Update
        run: |
          git add .
          git commit -m "[GitHub Action] Bump Build Number"
          git push origin HEAD
      
      - name: Import Code Sign Certificates
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          
      - name: Import API Keys - Step 1
        run: mkdir private_keys
      - name: Import API Keys - Step 2
        run: echo -n ${{ secrets.APP_STORE_API_KEY_BASE64 }} | base64 -d -o ./private_keys/AuthKey_${{ secrets.APP_STORE_API_KEY_ID }}.p8

      - name: Install CocoaPods
        run: pod install --project-directory=ios
          
      - name: Build # Note: this build was unnecessary as its only purpose was to download provisioning profiles. But since there is no way to pass args to xcodebuild from flutter, we have to do this.
        run: xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -allowProvisioningUpdates -authenticationKeyPath $(pwd)/private_keys/AuthKey_${{ secrets.APP_STORE_API_KEY_ID }}.p8 -authenticationKeyID ${{ secrets.APP_STORE_API_KEY_ID }} -authenticationKeyIssuerID ${{ secrets.APP_STORE_API_ISSUER_ID }}
  
      - name: Archive IPA
        run: flutter build ipa # --bundle-sksl-path sksl_default.json # leave this to integration tests
        
      # - name: Export IPA
      #   run: xcodebuild -exportArchive -archivePath build/ios/archive/Runner.xcarchive -exportPath build/ios/archive/Runner.ipa -exportOptionsPlist build/ios/archive/RunnerOptions.plist
              
      - name: Upload app to TestFlight
        run: xcrun altool --upload-app -f build/ios/archive/Runner.xcarchive --type ios --apiKey ${{ secrets.APP_STORE_API_KEY_ID }} --apiIssuer ${{ secrets.APP_STORE_API_ISSUER_ID }}
